<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_warrior_walk</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_lifeform</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init
range = 22;

img_spd_walk = 1/8;
img_spd_attack = 1/4;
image_index = random(image_number-1);

image_speed = img_spd_walk;
state = "chase";
alarm[10] = 2/image_speed +2

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///animation matrices
//attack
an_attack[0] = 0;
an_attack[1] = 2;
an_attack[2] = 2;
an_attack[3] = 3;
an_attack[4] = 0;
an_attack[5] = 0;
an_attack[6] = 0; 
an_attack[7] = 0; 
an_attack[8] = 0; 
an_attack[9] = 6; 
an_attack[10] = 3; 
an_attack[11] = 0; 
an_attack[12] = 0;
an_attack[13] = 0;
an_attack[14] = 0;
an_attack[15] = 0;

//walk
an_walk[0] = 0;
an_walk[1] = 3;
an_walk[2] = 3;
an_walk[3] = 3;
an_walk[4] = 3;
an_walk[5] = 0;
an_walk[6] = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///animate attack
if (state = "attack") {
    var dir = degtorad(point_direction(x, y, follow_x, follow_y));
    x += an_attack[image_index]*cos(dir);
    y += -an_attack[image_index]*sin(dir);
    if (image_index &lt; image_number) alarm[10] = 1/image_speed;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///animate walk
if (state = "chase") {
    if !(instance_exists(obj_fool)) {
        exit;
    }
    
    //face the fool
    if (follow_x-x &lt; 0) image_xscale = 1;
    else image_xscale = -1;
    
    //move
    var dir = degtorad(point_direction(x, y, follow_x, follow_y));
    x += an_walk[image_index]*cos(dir);
    y += -an_walk[image_index]*sin(dir);
    
    alarm[10] = 1/image_speed; //animation
    //stepping sound
    if (round(image_index) == 3) {
        alarm[2] = (1/image_speed)*0.375;
        
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_play_sound(snd_swing, 1, false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_play_sound(snd_step_deep, 1, false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///spawn damage
damage = instance_create (x - image_xscale*range, y, obj_dmg);
with (damage) {
    image_xscale = 14/32
    image_yscale = 7/32
}
alarm[0] = 1/image_speed * (image_number-image_index/*-1*/);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///attack recover (not in use)
sprite_index = spr_warrior_walk;
state = "chase";
instance_destroy(damage);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///state chase
if (state = "chase") {
    if !(instance_exists(obj_fool)) {
        exit;
    }
    
    //aim to stand NEXT TO the fool
    follow_x = obj_fool.x - sign(obj_fool.x-x)*(range)
    follow_y = obj_fool.y
    
    //attack
    if (point_distance(x, y, follow_x, follow_y) &lt; 16) {
        if (obj_fool.x-x &lt; 0) image_xscale = 1;
        else image_xscale = -1;
        
        state = "attack"
        sprite_index = spr_warrior_attack;
        image_speed = img_spd_attack;
        image_index = 0;
        alarm[10] = 2/image_speed //animation
        alarm[1] = 11/image_speed; //11 = billeder f√∏r hit
        alarm[3] = 9/image_speed;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///end attack state
if (state = "attack") {
    sprite_index = spr_warrior_walk;
    state = "chase";
    image_speed = img_spd_walk;
    image_index = 0;
    instance_destroy(damage);
    
    //face the fool
    if (follow_x-x &lt; 0) image_xscale = 1;
    else image_xscale = -1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
